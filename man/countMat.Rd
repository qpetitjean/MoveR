% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countMat.R
\name{countMat}
\alias{countMat}
\title{Build count matrix in a 2 dimensional space.}
\usage{
countMat(
  x = NULL,
  y = NULL,
  nbins = 100,
  groups = NULL,
  output = c("matrix", "data.frame"),
  na.rm = TRUE
)
}
\arguments{
\item{x}{A numeric vector used as the first dimension of the matrix.}

\item{y}{A numeric vector used as the second dimension of the matrix.}

\item{nbins}{A numeric value indicating the number of bins in both vertical and horizontal directions (default = 100).}

\item{groups}{A character or numeric vector used as a grouping variable to split the count matrix.}

\item{output}{A character string indicating whether the result should be returned as a dataframe or a list of matrix (depending on the number of groups, if groups is NULL, the function returns an unique matrix).}

\item{na.rm}{A logical value (i.e., TRUE or FALSE) indicating whether NA values should be stripped before the computation proceeds (default = TRUE).}
}
\value{
This function returns the number of counts over the two specified dimension (x and y) according to the number of specified bins (nbins argument).
The resulting output can be either a dataframe or a list of matrix depending on the output argument and the number of groups specified by the groups argument.
}
\description{
Given 2 numeric vectors defining a 2 dimensional space, and a specified number of bins,
this function compute the count for each bins in the 2 dimensional space and return the result either as a dataframe or a matrix.
It is also possible to specify a grouping vector to obtain as much count matrix as the number of specified groups.
}
\examples{

test <-
countMat(x = round(rnorm(5000, mean = 50 , sd = 10)),
         y = round(rnorm(5000, mean = 50 , sd = 10)),
         nbins = 10,
         output = "matrix")
test

# it is then possible to draw the count distribution in the 2d space using plotly
\dontrun{
# draw the 3d plot using plotly 
library(plotly)

# initialize the plot
fig <- plotly::plot_ly(x=~colnames(test), y=~rownames(test), contours = list(
  z = list(
    show = TRUE,
    start = round(min(sqrt(test)),-2),
    project = list(z = TRUE),
    end = round(max(sqrt(test)),-2),
    size = max(sqrt(test)) / 10,
    color = "white"
  )
))
# add the layer
fig <- plotly::add_surface(
  p = fig,
  z = sqrt(test),
  opacity = 0.8,
  colorscale = "Hot",
  cmin = min(sqrt(test)),
  cmax = max(sqrt(test)),
  colorbar = list(title = "counts (sqrt)")
)
# add some legends
fig <- plotly::layout(
  fig,
  title = '3D density plot',
  scene1 = list(
    xaxis = list(title = "x"),
    yaxis = list(title = "y"),
    zaxis = list(title = "counts (sqrt)")
  )
)
fig
}
}
\author{
Quentin PETITJEAN
}
