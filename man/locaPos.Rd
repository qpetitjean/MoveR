% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/locaPos.R
\name{locaPos}
\alias{locaPos}
\title{Locate a particle position.}
\usage{
locaPos(refDat = NULL, df = NULL, sep = NULL, dec = NULL, Fun = NULL)
}
\arguments{
\item{refDat}{A matrix or dataframe or path to a file (either .txt or .csv) containing a distance matrix to any object or
the location of one or several areas of interest (e.g., create a distance map using ImageJ).}

\item{df}{A data frame containing x and y coordinates in columns named "x.pos", "y.pos" for a given tracklet.}

\item{sep}{The field separator character, the values on each line of the file are separated by this character (optional, needed only if refDat is a path).}

\item{dec}{The character used in the file for decimal points (optional, needed only if refDat is a path).}

\item{Fun}{A custom function used to transform the data from df (e.g., round, ceiling, log).}
}
\value{
This function returns a vector containing the position of a particle according to a distance matrix to any object or
the location of one or several areas of interest along the particle's trajectory.
}
\description{
find the position of a particle along its trajectory according to a reference matrix indicating areas of interest.
}
\examples{

# load the sample data
Data <-
 readTrex(
   system.file("sampleData/sample_1/TREXOutput", package = "MoveR"),
   flipY = T,
   imgHeight = 2160,
   rawDat = F
 )
# convert it to a list of tracklets
trackDat <- convert2Tracklets(Data[1:7], by = "identity")

# load the reference dataset (A matrix or dataframe or path to a file (either .txt or .csv) containing a distance matrix to any object or
# the location of one or several areas of interest (here we have created a distance map using ImageJ)
refDat <-
 as.matrix(read.delim(
   system.file("sampleData/sample_1/ReferenceData/TREXOutput/RefDat_2602_ISA3080_Low_5.csv", package = "MoveR"),
   dec = "."
 ))
##  retrieve the value of the edge limit (1) and of the center limit (254) to plot them
arenaEdge <- data.frame(which(refDat == 1, arr.ind=T))
arenaCenter <- data.frame(which(refDat == 254, arr.ind=T))

## then specify that all values above 254 are considered as the center
refDat[which(as.numeric(refDat) > 254)] <- "center"
## rather all values above 0 and below or equal to 254 are considered as within the border
refDat[which(as.numeric(refDat) >= 0 & as.numeric(refDat) <= 254)] <- "edge"

# retrieve the area where the particles
# are located over their whole trajectory using locaPos function
trackDat <- analyseTracklets(trackDat,
                        customFunc = list(
                          Position = function(x)
                            locaPos(refDat, x)))
# draw the result, with tracklets part that are on the edge of the arena colored in red
# and those at the center in black
drawTracklets(
 trackDat,
 imgRes = c(3840, 2160),
 add2It = list(
   points(x = arenaEdge[, 2], y = arenaEdge[, 1], cex = 0.01),
   points(x = arenaCenter[, 2], y = arenaCenter[, 1], cex = 0.01)
 ),
 colId = "Position"
)

}
\author{
Quentin PETITJEAN
}
