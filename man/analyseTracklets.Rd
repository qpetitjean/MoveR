% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/analyseTracklets.R
\name{analyseTracklets}
\alias{analyseTracklets}
\title{Perform custom computation over a tracklet list.}
\usage{
analyseTracklets(trackDat, customFunc, progress = TRUE)
}
\arguments{
\item{trackDat}{A list of data frame containing tracking information for each tracklet.}

\item{customFunc}{A function or a list of functions used to perform the computation over all tracklets
NB: in case customFunc is a list of unnamed function it will try to retrieve their names by returning the first character string
following the function() call as result column name.}

\item{progress}{A logical value (i.e., TRUE or FALSE) indicating whether a progress bar should be displayed to inform process progression.}
}
\value{
this function returns the original list of data frames (i.e., tracklet)
with the result of the specified computation appended.
}
\description{
Given a list of data frames containing tracking information for each tracklet and
a custom function (or list of functions), this function iterate trough the tracklet lists to perform the specified computation
and returns the original list of data frames with the result of the analysis appended.
}
\examples{

set.seed(2023)
# generate some dummy tracklets
## start to specify some parameters to generate tracklets
TrackN <- 40 # the number of tracklet to simulate
TrackL <-
  1:1000 # the length of the tracklets or a sequence to randomly sample tracklet length
id <- 0
TrackList <- stats::setNames(lapply(lapply(seq(TrackN), function(i)
  trajr::TrajGenerate(sample(TrackL, 1), random = TRUE, fps = 1)), function(j) {
    id <<- id + 1
    data.frame(
      x.pos = j$x - min(j$x),
      y.pos = j$y - min(j$y),
      frame = j$time,
      identity = paste("Tracklet", id, sep = "_")
    )
  }), seq(TrackN))

# check the tracklets
MoveR::drawTracklets(TrackList,
                 timeCol = "frame")

# Run some computation on the dataset using analyseTracklets
TrackList2 <-
  MoveR::analyseTracklets(
    TrackList,
    customFunc = list(
      # specify a first function to compute speed over each tracklet (a modulus present within the MoveR package)
      speed = function(x)
        MoveR::speed(x,
                     TimeCol = "frame",
                     scale = 1),
      # compute turning angle in radians over each tracklet (a modulus present within the MoveR package)
      TurnAngle = function(x)
        MoveR::turnAngle(
          x,
          TimeCol = "frame",
          unit = "radians",
          scale = 1
        ),
      # convert the time expressed in frame in second using a conversion factor of 25 frame per second
      TimeSec = function(x)
        x[["frame"]] / 25,
      # or in minutes
      TimeMin = function(x)
        x[["frame"]] / 25 / 60
    )
  )

# check the result for the first tracklet
str(TrackList2[["1"]])

# plot the frequency plot of the particles' speed
par(mfrow = c(1, 2))
hist(MoveR::convert2List(TrackList2)[["speed"]],
     main = "Frequency plot of the particles' speed")

# plot the frequency plot of the particles' turning angle
Ht = circular::circular(
  MoveR::convert2List(TrackList2)[["TurnAngle"]],
  type = "angle",
  units = "radians",
  zero = 0
)
circular::rose.diag(
  Ht,
  bins = 24,
  shrink = 0.89,
  xlim = c(-1, 1),
  ylim = c(-1, 1),
  prop = 2,
  col = "gray",
  border = "black",
  units = 'radians',
  ticks = TRUE,
  main = "Frequency plot of the particles' turning angle"
)

}
\author{
Quentin PETITJEAN
}
