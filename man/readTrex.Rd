% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readTrex.R
\name{readTrex}
\alias{readTrex}
\title{Import Trex tracking output .npz files.}
\usage{
readTrex(trexPath, flipY = FALSE, imgHeight = NULL, rawDat = FALSE)
}
\arguments{
\item{trexPath}{The path of the TRex output folder where .npz files are stored.}

\item{flipY}{A logical value (i.e., TRUE or FALSE) indicating whether the origin of y coordinates should be flipped. If TRUE, y coordinates are flipped to start on the bottom-left (default = FALSE).}

\item{imgHeight}{A numeric value expressed in pixels, the length of Y axis
corresponding to the height of the image or video resolution (optional, only used when flipY = TRUE).}

\item{rawDat}{TRUE or FALSE, if TRUE add a second list containing all the elements retrieved from .npz files (see \href{https://trex.run}{trex.run}),
may drastically increase the size of the object returned by the function (default = FALSE).}
}
\value{
A list containing either a list of 9 elements classically used for further computations or a list containing 2 sublists, the first corresponding to the one previously mentioned
and the second containing all the elements retrieved from the .npz files (see rawDat argument). Also, by default the function flip y coordinates to start on the bottom-left.
}
\description{
Given the path of a folder containing multiple Trex outputs (one .npz file per particle/individual),
this function returns a list of 9 vectors classically used for further computations using MoveR package:
\itemize{
\item{'maj.ax': }{the length of the major axis (i.e., the midline) for a particle over frame (i.e., length of the ellipse).}
\item{'angle': }{the particle's absolute angle in radians, orientation of the particle according to X-axis.}
\item{'min.ax': }{the length of the minor axis for a particle over frame (i.e., width of the ellipse), returns NA since it is not present in the TREX output.}
\item{'x.pos': }{x position of the particle's centroid.}
\item{'y.pos': }{y position of the particle's centroid.}
\item{'identity': }{the particle's identity given by the tracking software.}
\item{'frame': }{the video frame number at which the measurements has been made.}
\item{'ntargets': }{the number of particle tracked over each frame.}
\item{'timestamps': }{the elapsed time over each frame, in seconds.}
}

Alternatively, the function can returns a list containing 2 sublists, the first corresponding to the one mentioned above
and the second containing all the elements retrieved from the .npz files (see rawDat argument).
}
\examples{
\dontrun{

# Download the first dataset from the sample data repository
Path2Data <- MoveR::DLsampleData(dataSet = 1, tracker = "TRex")
Path2Data

# Import the list containing the 9 vectors classically used for further computation
# and flip Y coordinates to start on the bottom-left
Data <- MoveR::readTrex(Path2Data[[1]],
               flipY = T,
               imgHeight = 2160,
               rawDat = F
        )
str(Data)

# Import the list containing 2 sublists, the first containing the 9 vectors classically used for further computation
# and the second list containing all the elements retrieved from .npz files,
# also do not flip Y coordinates (start on the top-left)
DataFull <- MoveR::readTrex(Path2Data[[1]],
                   rawDat = T
            )
str(DataFull)

} 
}
\references{
Tristan Walter, Iain D Couzin (2021) TRex, a fast multi-animal tracking system with markerless identification, and 2D estimation of posture and visual fields eLife 10:e64000.
\href{https://trex.run}{trex.run}
}
\seealso{
\code{\link{readCtrax}}, \code{\link{readTrackR}}, \code{\link{readIdtracker}}, \code{\link{flipYCoords}}
}
\author{
Quentin PETITJEAN
}
