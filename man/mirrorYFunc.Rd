% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mirrorYFunc.R
\name{mirrorYFunc}
\alias{mirrorYFunc}
\title{Mirror y coordinates}
\usage{
mirrorYFunc(YCoords, imgHeight = NA)
}
\arguments{
\item{YCoords}{A vector containing y coordinates for some particles.}

\item{imgHeight}{A numeric value expressed in pixels, the length of Y axis
corresponding to the height of the image or video resolution (optional, only used when mirrorY = TRUE).}
}
\value{
A vector containing mirrored Y coordinates.
}
\description{
Given a vector containing the y coordinates of detected particles and image height,
this function returns mirrored y coordinates.
}
\examples{

# generate some dummy fragments
## start to specify some parameters to generate fragments
Fragn <- 1 # the number of fragment to simulate
FragL <- 10 # the length of the fragments or a sequence to randomly sample fragment length

fragsList <- stats::setNames(lapply(lapply(seq(Fragn), function(i)
 trajr::TrajGenerate(sample(FragL, 1), random = TRUE, fps = 1)), function(j)
   data.frame(
     x.pos = j$x - min(j$x),
     y.pos = j$y - min(j$y),
     frame = j$time
   )), seq(Fragn))

trackDatList <- convert2list(fragsList)

imgHeight <- max(trackDatList[["y.pos"]], na.rm = T)

# use mirrorYFunc to mirror y coords
trackDatList[["y.pos"]] <-
  mirrorYFunc(trackDatList[["y.pos"]], imgHeight = imgHeight)

# convert the new dataset to a list of fragment
fragsListMirrored <- convert2frags(trackDatList, by = "frags_id")

# draw the result
# here we can see that both trajectory are mirrored, with the original trajectory 
# drawed in black and the mirrored one in red
drawFrags(
  setNames(c(fragsList,fragsListMirrored), c(1:2)),
  imgRes = c(max(trackDatList[["x.pos"]], na.rm = T), imgHeight), 
  colFrag = T)

}
