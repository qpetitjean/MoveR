% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/drawFrags.R
\name{drawFrags}
\alias{drawFrags}
\title{Draw tracking fragments}
\usage{
drawFrags(
  fragsList,
  selFrags = NULL,
  imgRes = c(1920, 1080),
  timeWin = list(c(0, Inf)),
  colGrad = c("#000000", "#999999", "#6600CC", "#9999FF", "#33CCFF", "#0066CC",
    "#66CC00", "#FFFF00", "#FF3300", "#CC0000"),
  add2It = NULL
)
}
\arguments{
\item{fragsList}{A list of tracking fragments to plot along x and y coordinates}

\item{selFrags}{A vector of either numeric values or character strings,
the number or the id of the selFrags to plot (optional)}

\item{imgRes}{A vector of 2 numeric values, resolution of the video used as x and y limit of the plot
(i.e., the number of pixels in image width and height, e.g., 1920 x 1080).}

\item{timeWin}{A list of one or several vector containing 2 numeric values separated by a comma
corresponding to the time interval between which selFrags have to be drawn in frame (optional)}

\item{colGrad}{A vector of a ready to use color ramp or several colors specified
either with their name or hexadecimal values choose color
gradient representing time (see base R documentation) (optional)}

\item{add2It}{A function specifying an element to add to draw_frags}
}
\value{
A plot with all or only selected fragment paths colored according to time
}
\description{
Given a list of tracking fragments containing cartesian coordinates,
this fonction returns a plot with fragments represented as a sequence of segments connecting
cartesian coordinates between successive frames. Fragments are colored according to the time.
}
\examples{


# generate some dummy fragments
fragsList = list()
for (i in seq(10)) {
 rPath <- TrajGenerate(1000, random = TRUE, fps = 1)
 rPath$y = rPath$y - min(rPath$y)
 rPath$x = rPath$x - min(rPath$x)
 sillydf = data.frame(rPath[1], rPath[2], rPath[3])
 names(sillydf) = c("x.pos", "y.pos", "frame")
 fragsList[[i]] = sillydf
}
# convert frag list to a simple list to extract image resolution for generated fragments (x, y scales of the plot)
trackDat <- convert2list(fragsList)

# Exemple 1: draw all fragments, for the whole video duration
drawFrags(
 fragsList,
 imgRes = c(max(trackDat$x.pos), max(trackDat$y.pos)),
 timeWin = list(c(0, 1001))
)

# Exemple 2: draw only selected fragments (i.e., 1, 5 and 10), for the whole video duration
drawFrags(
 fragsList,
 imgRes = c(max(trackDat$x.pos), max(trackDat$y.pos)),
 timeWin = list(c(0, 1001)),
 selFrags = c(1, 5, 10)
)

# Exemple 3: draw fragments according to time intervals (first interval 1 to 100, second interval 800 to 900 frames)
drawFrags(
 fragsList,
 imgRes = c(max(trackDat$x.pos), max(trackDat$y.pos)),
 timeWin = list(c(1, 100), c(800, 900))
)

# Exemple 4: draw fragments according to time intervals (first interval 1 to 100, second interval 800 to 900 frames)
# and add dummy points on the plot (here we draw the starting and ending points of each fragments in blue and green respectively)
drawFrags(
fragsList,
imgRes = c(max(trackDat$x.pos), max(trackDat$y.pos)),
timeWin = list(c(1, 100), c(800, 900)),
add2It = list(for (j in seq(fragsList)) {
 points(
   fragsList[[j]]$x.pos[fragsList[[j]]$frame == 1],
   fragsList[[j]]$y.pos[fragsList[[j]]$frame == 1],
   col = "blue",
   pch = 19,
   cex = 0.8
 )
}, for (k in seq(fragsList)) {
 points(
   fragsList[[k]]$x.pos[fragsList[[k]]$frame == 800],
   fragsList[[k]]$y.pos[fragsList[[k]]$frame == 800],
   col = "blue",
   pch = 19,
   cex = 0.8
 )
}, for (l in seq(fragsList)) {
 points(
   fragsList[[l]]$x.pos[fragsList[[l]]$frame == 100],
   fragsList[[l]]$y.pos[fragsList[[l]]$frame == 100],
   col = "green",
   pch = 19,
   cex = 0.8
 )
}, for (m in seq(fragsList)) {
 points(
   fragsList[[m]]$x.pos[fragsList[[m]]$frame == 900],
   fragsList[[m]]$y.pos[fragsList[[m]]$frame == 900],
   col = "green",
   pch = 19,
   cex = 0.8
 )
})
)


}
