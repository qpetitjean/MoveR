% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/readPlain.R
\name{readPlain}
\alias{readPlain}
\title{Import plain tracking output from a table.}
\usage{
readPlain(
  plainTab,
  sep = ";",
  dec = ".",
  id = "identity",
  timeCol = "frame",
  flipY = FALSE,
  imgHeight = NULL,
  frameR = NULL
)
}
\arguments{
\item{plainTab}{The full path of a plain tracking output (e.g., .txt or .csv, see \code{\link[utils]{read.table}}) or an already imported tibble, dataframe or list of vectors.}

\item{sep}{The field separator character. Values on each line of the file are separated by this character (default = ";" - only useful if plainTab is a path).}

\item{dec}{The character used in the file for decimal points (default = "." - only useful if plainTab is a path).}

\item{id}{A character string corresponding to the name of the column containing particle's identity (default = "identity").}

\item{timeCol}{A character string corresponding to the name of the column containing Time information (default = "frame").}

\item{flipY}{A logical value (i.e., TRUE or FALSE) indicating whether the origin of y coordinates should be flipped. If TRUE, y coordinates are flipped to start on the top-left (default = FALSE).}

\item{imgHeight}{A numeric value expressed in pixels, the length of Y axis
corresponding to the height of the image or video resolution (optional, only used when flipY = TRUE).}

\item{frameR}{A numeric value expressed in frames per second, the frequency at which frames are recorded/displayed in the video (optional, only used to compute timestamps).}
}
\value{
A list containing either a list of 6 elements classically used for further computations.
}
\description{
Given the path of a table file (e.g., .txt or .csv, see \code{\link[utils]{read.table}}) or an already imported tibble, dataframe or list of vectors
containing x and y coordinates (named X and Y respectively), the identity of the particle(s) and time,
this function returns a list of 6 vectors classically used for further computations using MoveR package:
\itemize{
\item{'x.pos': }{x position of the particle's centroid.}
\item{'y.pos': }{y position of the particle's centroid.}
\item{'identity': }{the particle's identity given by the tracking software.}
\item{'frame': }{the video frame number at which the measurements has been made.}
\item{'ntargets': }{the number of particle tracked over each frame.}
\item{'timestamps': }{the elapsed time over each frame, in seconds.}
}

Also, the function can flip y coordinates (see flipY argument).
}
\examples{

set.seed(2023)
# generate some dummy tracklets
## start to specify some parameters to generate tracklets
TrackN <- 40 # the number of tracklet to simulate
TrackL <-
  1:1000 # the length of the tracklets or a sequence to randomly sample tracklet length
TrackList <- stats::setNames(lapply(lapply(seq(TrackN), function(i)
  trajr::TrajGenerate(sample(TrackL, 1), random = TRUE, fps = 1)), function(j) {
    data.frame(
      X = j$x - min(j$x),
      Y = j$y - min(j$y),
      frame = j$time
    )
  }), seq(TrackN))
## convert it to a simple list of vector
plainTab <- MoveR::convert2List(TrackList)

# Import the list containing the 6 vectors classically used for further computation (the function can also retrieve the plainTab from a table file by giving the full path to the file)
Data <-
  MoveR::readPlain(plainTab,
                   id = "trackletId",
                   timeCol = "frame",
                   frameR = 1)
str(Data)

}
\seealso{
\code{\link{readCtrax}}, \code{\link{readTrackR}}, \code{\link{readTrex}}, \code{\link{readIdtracker}}, \code{\link{flipYCoords}}, \code{\link[utils]{read.table}}
}
\author{
Quentin PETITJEAN
}
